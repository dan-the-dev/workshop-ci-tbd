name: Tests

on:
  push:
    branches:
        - master
  pull_request:
    branches:
        - master

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      # This env variable will be used by your app/test suite.
      DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/testdb"
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm ci

      # Although GitHub Actions waits for the service's health check,
      # it can be useful to include an extra wait step.
      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Set DB schema
        run: npm run db-reset

      - name: Run Jest tests
        run: npm run test
